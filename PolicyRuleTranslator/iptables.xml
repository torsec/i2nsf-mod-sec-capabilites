<?xml version="1.0" encoding="UTF-8"?>
<p:nsf xmlns:p="http://untitled/converted.xsd" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://untitled/converted.xsd 		../xsdModelio/converted.xsd ">
			

	<securityCapability xsi:type="p:AddrSourceTypeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--src-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --src-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AddrDestinationTypeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dst-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dst-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AddrInterfaceLimitOutCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--limit-iface-out</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitInCapability</absenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitInCapability</absenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitInCapability</absenceOfCapability>
			</dependency>
	  	</adapter>
	</securityCapability>
	
			
	<securityCapability xsi:type="p:AddrInterfaceLimitInCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--limit-iface-in</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>INPUT</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitOutCapability</absenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitOutCapability</absenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>addrtype</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
				<absenceOfCapability>AddrInterfaceLimitOutCapability</absenceOfCapability>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AhSpiCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ahspi</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ahspi</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>fromSpi</preVariable>
	  				<postVariable>toSpi</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>AH</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AhHeaderLengthCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ahlen</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ahlen</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>AH</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AhReservedCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ahres</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>AH</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:BpfCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--bytecode</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>bpf</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClusterTotalNodeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--cluster-total-nodes</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>cluster</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClusterLocalNodeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--cluster-local-node</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --cluster-local-node</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>cluster</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClusterNodeMaskCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--cluster-local-nodemask</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --cluster-local-nodemask</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>cluster</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClusterNodeHashCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--cluster-hash-seed</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>cluster</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CommentCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--comment</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>comment</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnbytesCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connbytes</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --connbytes</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>from</preVariable>
	  				<postVariable>to</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connbytes</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnbytesDirCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connbytes-dir</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connbytes</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnbytesModeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connbytes-mode</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connbytes</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LabelCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--label</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --label</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlabel</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetLabelCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--set</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlabel</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NumberConnectionsCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN_OR_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--connlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--connlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--connlimit-above</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlimit</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MaskConnCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connlimit-mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlimit</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LimitSAddrCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connlimit-saddr</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlimit</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LimitDAddrCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--connlimit-daddr</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connlimit</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--mark</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>value</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>connmark</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackStateCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctstate</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctstate</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackProtocolCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctproto</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctproto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackOriginalSourceAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctorigsrc</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctorigsrc</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackOriginalDestinationAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctorigdst</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctorigdst</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackReplySourceAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctreplsrc</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctreplsrc</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackReplyDestinationAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctrepldst</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctrepldst</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackOriginalSourcePortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctorigsrcport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctorigsrcport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackOriginalDestinationPortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctorigdstport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctorigdstport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackReplySourcePortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctreplsrcport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctreplsrcport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackReplyDestinationPortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctrepldstport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctrepldstport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackStatusCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctstatus</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctstatus</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackExpireTimeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctexpire</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ctexpire</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startTime</preVariable>
	  				<postVariable>endTime</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnTrackDirCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ctdir</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>conntrack</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CpuCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--cpu</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --cpu</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>cpu</presenceOfValue>
			</dependency>
		</adapter>
		
		<translator>
			<modifyDefault>
				<setNumericRange>
					<from>0</from>
					<to>7</to>
				</setNumericRange>
				<complexTypeWithIntegerAttributeName>CpuCapability</complexTypeWithIntegerAttributeName>
				<integerAttributeToBeRestricted>number</integerAttributeToBeRestricted>
			</modifyDefault>
		</translator>
		
	</securityCapability>
	
	<securityCapability xsi:type="p:DccpTypeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dccp-types</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dccp-types</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>dccp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DccpOptionCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dccp-option</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dccp-option</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>dccp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DevSourceGroupCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--src-group</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --src-group</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>devgroup</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DevDestGroupCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dst-group</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dst-group</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>devgroup</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DscpClassCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dscp</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dscp</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>dscp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DscpCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dscp-class</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dscp-class</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>dscp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DstLengthCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dst-len</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dst-len</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>dst</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DstOptsCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dst-opts</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dst-opts</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>type</preVariable>
	  				<postVariable>len</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>,</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>len</preVariable>
	  				<postVariable>type</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>,</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>type</preVariable>
	  				<postVariable>type</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>dst</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:EcnIpv4EctCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--ecn-ip-ect</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ecn-ip-ect</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyValueRestriciton>
				<attributeName>value</attributeName>
				<regexValue>[0-3]</regexValue>
			</bodyValueRestriciton>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ecn</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:EspSpiCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--espspi</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --espspi</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>esp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Eui64Capability">
		<adapter>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>eui64</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>eui64</presenceOfValue>
				<presenceOfValue>INPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>eui64</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragIdCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fragid</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --fragid</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startId</preVariable>
	  				<postVariable>toId</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragLenCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fraglen</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --fraglen</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragResCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fragres</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragFirstCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fragfirst</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragMoreCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fragmore</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FragLastCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--fraglast</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>frag</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--hashlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN_OR_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--hashlimit-upto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--hashlimit-above</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>amount</preVariable>
					<postVariable>time</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitBurstCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-burst</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitModeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-mode</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>mode</preVariable>
					<postVariable>mode</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitSrcMaskCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-srcmask</realCommandName>
			</commandName>
			<bodyValueRestriciton>
				<attributeName>prefix</attributeName>
				<regexValue>[0-32]</regexValue>
			</bodyValueRestriciton>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitDstMaskCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-dstmask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitNameCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-name</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitHTableSizeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-htable-size</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HashLimitHTableMaxCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-htable-max</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HashLimitHTableExpireCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-htable-expire</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HashLimitHTableGcintevalCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-htable-gcinterval</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitRateMatch">
		<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-rate-match</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashLimitRateInterval">
		<adapter>
	  		<commandName>
				<realCommandName>--hashlimit-rate-match</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hashlimit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HbhLenCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hbh-len</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --hbh-len</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hbh</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HbhOptsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hbh-opts</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>type</preVariable>
					<postVariable>len</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>type</preVariable>
					<postVariable>type</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>len</preVariable>
					<postVariable>type</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hbh</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HelperCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--helper</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --helper</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>helper</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HopLimitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hl-eq</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --hl-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--hl-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--hl-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>hl</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IcmpTypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--icmp-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --icmp-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>type</preVariable>
					<postVariable>code</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>icmp</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Icmp6TypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--icmpv6-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --icmpv6-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>type</preVariable>
					<postVariable>code</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>icmp6</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability> 
	
	<securityCapability xsi:type="p:IpSourceRangeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--src-range</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --src-range</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>address</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>iprange</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpDestinationRangeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--dst-range</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dst-range</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>address</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>iprange</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Ipv6HeaderSoftCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--soft</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipv6header</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Ipv6HeaderCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--header</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --header</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>header</preVariable>
					<postVariable>header</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipv6header</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ipvs</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ipvs</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVprotoCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vproto</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --vproto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVaddrCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vaddr</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --vaddr</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVportCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --vport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVdirCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vdir</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVmethodCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vmethod</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --vmethod</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpvsVportCtlCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--vportctl</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --vportctl</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ipvs</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LengthCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--length</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --length</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startLength</preVariable>
					<postVariable>endLength</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>length</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LimitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--limit</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --limit</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>rate</preVariable>
					<postVariable>time</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>limit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LimitBurstCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--limit-burst</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --limit-burst</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>limit</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MacCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mac-source</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mac-source</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>mac</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>mac</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>mac</presenceOfValue>
				<presenceOfValue>INPUT</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mark</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>mark</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MhTypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mh-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mh-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>type</preVariable>
					<postVariable>type</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>MH</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>ipv6-mh</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NfacctNameCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nfacct-name</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>nfacct</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OsfGenreCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--genre</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --genre</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>osf</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OsfTtlCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ttl</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>osf</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OsfLogCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>osf</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OwnerUsernameCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--uid-owner</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --uid-owner</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OwnerUseridCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--uid-owner</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --uid-owner</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromUserID</preVariable>
					<postVariable>toUserID</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OwnerGroupnameCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--gid-owner</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --gid-owner</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OwnerGroupidCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--gid-owner</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --gid-owner</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromGroupID</preVariable>
					<postVariable>toGroupID</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OwnerSupplGroupCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--suppl-groups</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SocketExistsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--socket-exists</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --socket-exists</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>owner</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PhysdevInCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--physdev-in</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --physdev-in</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>INPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PhysdevOutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--physdev-out</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --physdev-out</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PhydevIsInCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--physdev-is-in</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --physdev-is-in</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PhysDevIsOutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--physdev-is-out</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --physdev-is-out</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PhysdevIsBridgedCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--physdev-is-bridged</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --physdev-is-bridged</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>physdev</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PkttypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--pkt-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --pkt-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>pkttype</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability> 
	
	<securityCapability xsi:type="p:PolicyDirCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--dir</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>in</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>in</presenceOfValue>
				<presenceOfValue>INPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>in</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>out</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>out</presenceOfValue>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>out</presenceOfValue>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyPolCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--pol</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<absenceOfCapability>PolicyStrctCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyStrctCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--strict</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyReqidCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--reqid</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --reqid</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicySpiCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--spi</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --spi</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyProtoCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--proto</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --proto</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyModeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mode</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mode</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyTunnelSrcCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tunnel-src</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tunnel-src</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>PolicyModeCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>tunnel</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyTunnelDstCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tunnel-dst</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tunnel-dst</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>PolicyModeCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
				<presenceOfValue>tunnel</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PolicyNextCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--next</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>PolicyStrctCapability</presenceOfCapability>
				<presenceOfValue>policy</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:QuotaCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--quota</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --quota</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>quota</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RateestDeltaCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest-delta</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rateest</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability> 
	
	<securityCapability xsi:type="p:RateestRateCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>rateest-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>rateest-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>rateest-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN_OR_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN_OR_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rateest</presenceOfValue>
			</dependency>
	  	</adapter>
	</securityCapability> 			
	
	<securityCapability xsi:type="p:RateestNameConditionCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>absolute</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest1</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>one</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest2</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>two</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rateest</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RateestBpsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest-bps</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>absolute</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-bps1</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>one</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-bps2</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>two</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rateest</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RateestPpsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest-pps</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>absolute</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-pps1</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>one</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>! --rateest-pps2</realCommandName>
				<commandNameCondition>
					<attributeName>estimatorMode</attributeName>
					<attributeValue>two</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rateest</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RealmCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--realm</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --realm</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>realm</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>realm</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RecentNameCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--name</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RecentSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --set</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
				<absenceOfCapability>RecentRcheckCapability</absenceOfCapability>
				<absenceOfCapability>RecentUpdateCapability</absenceOfCapability>
				<absenceOfCapability>RecentRemoveCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
		
	<securityCapability xsi:type="p:RecentRsourceCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rsource</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentRdestCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rdest</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentMaskCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentRcheckCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rcheck</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --rcheck</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
				<absenceOfCapability>RecentUpdateCapability</absenceOfCapability>
				<absenceOfCapability>RecentRemoveCapability</absenceOfCapability>
				<absenceOfCapability>RecentSetCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentUpdateCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--update</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --update</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
				<absenceOfCapability>RecentRcheckCapability</absenceOfCapability>
				<absenceOfCapability>RecentRemoveCapability</absenceOfCapability>
				<absenceOfCapability>RecentSetCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentRemoveCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--remove</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --remove</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
				<absenceOfCapability>RecentRcheckCapability</absenceOfCapability>
				<absenceOfCapability>RecentUpdateCapability</absenceOfCapability>
				<absenceOfCapability>RecentSetCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentSecondsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--seconds</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentRcheckCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentUpdateCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentReapCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--reap</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentSecondsCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentHitcountCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hitcount</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentRcheckCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentUpdateCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RecentRttlCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rttl</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentRcheckCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>RecentUpdateCapability</presenceOfCapability>
				<presenceOfValue>recent</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LooseCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--loose</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ValdimarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--validmark</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:AcceptLocalCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--accept-local</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:InvertCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--invert</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>rpfilter</presenceOfValue>
				<presenceOfValue>PREROUTING</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RtTypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-type</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --rt-type</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RtSegsleftCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-segsleft</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --rt-segsleft</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromNum</preVariable>
					<postVariable>toNum</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RtLenCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-len</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --rt-len</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Rt0resCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-0-res</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Rt0addrsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-0-addrs</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>addr</preVariable>
					<postVariable>addr</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:Rt0notStrictCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rt-0-not-strict</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>rt</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SctpChunkTypesCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--chunk-types</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --chunk-types</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>mode</preVariable>
					<postVariable>chunk</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>chunk</preVariable>
					<postVariable>flags</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>chunk</preVariable>
					<postVariable>chunk</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>flags</preVariable>
					<postVariable>chunk</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>SCTP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MatchSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--match-set</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --match-set</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>setname</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>flag</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ReturnNomatchCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--return-nomatch</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UpdateCountersCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--update-counters</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --update-counters</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>MatchSetCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UpdateSubcountersCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--update-subcounters</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --update-subcounters</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfCapability>MatchSetCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:PacketsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--packets-eq</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --packets-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--packets-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--packets-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:BytesCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--bytes-eq</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --bytes-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--bytes-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--bytes-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>set</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SocketTransparentCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--transparent</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>socket</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SocketNowildcardCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nowildcard</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>socket</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SocketRestoreSkmarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--restore-skmark</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>socket</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StateCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--state</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --state</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>state</preVariable>
					<postVariable>state</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>state</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StatisticModeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mode</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>statistic</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StatisticProbabilityCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--probability</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --probability</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>statistic</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SatisticEveryCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--every</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --every</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>statistic</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StatisticPacketCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--packet</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>statistic</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringAlgoCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--algo</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringFromCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--from</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringToCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringPatternCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--string</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --string</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringHexPatternCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hex-string</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --hex-string</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StringIcaseCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--icase</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>string</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TcpFlagsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tcp-flags</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tcp-flags</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>mask</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>comp</preVariable>
					<postVariable>comp</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>mask</preVariable>
					<postVariable>comp</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>mark</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TcpOptionCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tcp-option</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tcp-option</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TCP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TcpSegmentSizeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mss</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --mss</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromSize</preVariable>
					<postVariable>toSize</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TCP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DateStartCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--datestart</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DateStopCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--datestop</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TimeStartCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--timestart</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TimeStopCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--timestop</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MonthDayCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--monthdays</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --monthdays</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>day</preVariable>
					<postVariable>day</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:WeekDayCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--weekdays</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --weekdays</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>day</preVariable>
					<postVariable>day</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ContiguousCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--contiguous</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:KerneltzCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--kerneltz</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>time</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TosValueCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tos</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tos</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>tos</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TosSymbolCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tos</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --tos</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>tos</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IpTimeToLiveCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ttl-eq</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ttl-eq</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--ttl-lt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>LESS_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--ttl-gt</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>GREATER_THAN</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>ttl</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:U32TestCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--u32</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --u32</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>u32</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UncleanCapability">
		<adapter>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>unclean</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SourcePortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--sport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --sport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyValueRestriciton>
	  			<attributeName>startValue</attributeName>
	  			<regexValue>^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$</regexValue>
	  			<integerRange>
	  				<from>0</from>
	  				<to>65535</to>
	  			</integerRange>
	  		</bodyValueRestriciton>
	  		<bodyValueRestriciton>
	  			<attributeName>endValue</attributeName>
	  			<regexValue>^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$</regexValue>
	  			<integerRange>
	  				<from>0</from>
	  				<to>65535</to>
	  			</integerRange>
	  			<integerRange>
	  				<from>15</from>
	  				<to>1</to>
	  			</integerRange>
	  		</bodyValueRestriciton>
	  		<dependency>
	  			<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
	  			
	  		</dependency>
	  	</adapter>
	  	
<!-- 
	  	<translator>
	  		<enumerationName>ServicePortNameEnumeration</enumerationName>
	  		<newEnumeration>
	  			<newValue>porta1</newValue>
	  			<newValue>porta2</newValue>
	  			<newValue>porta3</newValue>
	  			<newValue>porta4</newValue>
	  			<newValue>porta5</newValue>
	  		</newEnumeration>
	  	
	  	</translator>
-->
  	</securityCapability>
  	
	<securityCapability xsi:type="p:DestinationPortCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--dport</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dport</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startValue</preVariable>
	  				<postVariable>endName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<bodyConcatenator>
	  			<realConcatenator>:</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>startName</preVariable>
	  				<postVariable>endValue</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  		<dependency>
	  			<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
	  		</dependency>
	  	</adapter>
  	</securityCapability>
  	
	<securityCapability xsi:type="p:MultiPortsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ports</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --ports</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endName</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>multiport</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MultiSourcePortCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--sports</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --sports</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endName</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>multiport</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:MultiDestinationPortCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--dports</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! --dports</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endName</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>endValue</preVariable>
					<postVariable>startName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endName</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>startName</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>MatchCapability</presenceOfCapability>
				<presenceOfValue>multiport</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	
	
	
	
	<securityCapability xsi:type="p:AuditTypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--type</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>AUDIT</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ChecksumFillCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--checksum-fill</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CHECKSUM</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetClassCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-class</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>major</preVariable>
					<postVariable>minor</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLASSIFY</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NewClusteripCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--new</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashModeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hashmode</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClustermacCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--clustermac</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TotalNodesCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--total-nodes</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LocalNodeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--local-node</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HashInitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hash-init</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CLUSTERIP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkSetxmarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-xmark</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CONNMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkSaveMarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--save-mark</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CONNMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkRestoreMarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--restore-mark</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CONNMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkBitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--and-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>AND</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--or-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>OR</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--xor-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>XOR</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CONNMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnmarkSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--restore-mark</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>CONNMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnsecmarkSaveCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--save</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CONNSECMARK</presenceOfValue>
				<presenceOfValue>scurity</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CONNSECMARK</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ConnsecmarkRestoreCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--restore</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CONNSECMARK</presenceOfValue>
				<presenceOfValue>scurity</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CONNSECMARK</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtNotrackCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--notrack</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtHelperCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--helper</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtCteventsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ctevents</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>event</preVariable>
					<postVariable>event</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtExpeventsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--expevents</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>event</preVariable>
					<postVariable>event</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtZoneCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--zone</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CtTimeoutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--timeout</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>CT</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DnatToDestinationCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to-destination</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromAddress</preVariable>
					<postVariable>toAddress</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>toAddress</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>UDP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>DCCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>SCTP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DnatRandomCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--random</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:PersistentCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--persistent</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>DNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SrcPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--src-pfx</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>DNPT</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:DestPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--dst-pfx</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>DNPT</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetDscpValueCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-dscp</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>DSCP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetDscpClassCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-dscp-class</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>DSCP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:EcnTcpRemoveCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ecn-tcp-remove</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>ECN</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HlSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hl-set</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>HL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HlDecCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hl-dec</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>HL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HlIncCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hl-inc</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>HL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkTupleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-tuple</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkModCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-mod</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkOffsetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-offset</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkSrcPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-src-prefix</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkDstPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-dst-prefix</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HmarkSportMaskCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-sport-mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkDportMaskCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-dport-mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkSpiMaskCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-spi-mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:HmarkProtoMaskCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-proto-mask</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HmarkRndCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--hmark-rnd</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>HMARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IdletimerLabelCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--timeout</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>IDLETIMER</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:IdletimerTimeoutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--label</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>IDLETIMER</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LedTriggerIdCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--led-trigger-id</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LED</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LedDelayCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--led-delay</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LED</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LedAlwaysBlinkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--led-always-blink</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LED</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogLevelCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-level</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-prefix</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogTcpSequenceCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-tcp-sequence</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogTcpOptionsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-tcp-options</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogIpOptionsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-ip-options</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:LogUidCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--log-uid</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>LOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MarkSetxmarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-xmark </realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>MARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MarkSetMarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-mark</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>MARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MarkBitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--and-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>AND</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--or-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>OR</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--xor-mark</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>XOR</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>MARK</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ToPortsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to-ports</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>MASQUERADE</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>MASQUERADE</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>UDP</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>MASQUERADE</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>DCCP</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>MASQUERADE</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>SCTP</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RandomCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--random</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>MASQUERADE</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MirrorCapability">
		<adapter>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>MIRROR</presenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ToAddressCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>NETMAP</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NflogGroupCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nflog-group</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFLOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NflogPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nflog-prefix</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFLOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NflogRangeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nflog-range</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFLOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:NflogThresholdCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nflog-threshold</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFLOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NfQueueNumCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--queue-num</realCommandName>
			</commandName>
			<bodyValueRestriciton>
				<attributeName>value</attributeName>
			</bodyValueRestriciton>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFQUEUE</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NfQueueBalanceCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--queue-balance</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromValue</preVariable>
					<postVariable>toValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFQUEUE</presenceOfValue>
			</dependency>
			
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NfQueueBypassCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--queue-bypass</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>NFQUEUE</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NfQueueCpuFanoutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--queue-cpu-fanout</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>NfQueueBalanceCapability</presenceOfCapability>
				<presenceOfValue>NFQUEUE</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NotrackCapability">
		<adapter>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>NOTRACK</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RateestNameActionCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest-name</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>RATEEST</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RateestIntevalCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--rateest-interval</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>amount</preVariable>
					<postVariable>tipeOfTime</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>RATEEST</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:RateestEwmalogCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ewmalog</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>RATEEST</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RedirectToPortCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to-ports</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>fromValue</preVariable>
					<postVariable>toValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>REDIRECT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>REDIRECT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>UDP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>REDIRECT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>DCCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>REDIRECT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<presenceOfValue>SCTP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RedirectRandomCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--mark</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>REDIRECT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RejectIpv4TypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--reject-with</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>REJECT</presenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RejectIpv6TypeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--reject-with</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>REJECT</presenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SameToCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>address</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SAME</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SameNodestCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--nodst</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SAME</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SameRandomCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--random</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SAME</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SelectxCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--selctx</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>SECMARK</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>SECMARK</presenceOfValue>
				<presenceOfValue>security</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetAddCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--add-set</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>setname</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>flag</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SET</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetDelCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--del-set</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator> </realConcatenator>
				<concatenatorCondition>
					<preVariable>setname</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>flag</preVariable>
					<postVariable>flag</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SET</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetTimeoutCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--timeout</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SET</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetExistCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--exist</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SET</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SnatToSourceCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--to-source</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>address</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>:</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>startValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<bodyConcatenator>
				<realConcatenator>-</realConcatenator>
				<concatenatorCondition>
					<preVariable>startValue</preVariable>
					<postVariable>endValue</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>SNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<absenceOfCapability>PREROUTING</absenceOfCapability>
				<absenceOfCapability>OUTPUT</absenceOfCapability>
				<absenceOfCapability>FORWARD</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SnatRandomCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--random</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>SNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<absenceOfCapability>PREROUTING</absenceOfCapability>
				<absenceOfCapability>OUTPUT</absenceOfCapability>
				<absenceOfCapability>FORWARD</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SnatPersistentCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--persistent</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>SNAT</presenceOfValue>
				<presenceOfValue>nat</presenceOfValue>
				<absenceOfCapability>PREROUTING</absenceOfCapability>
				<absenceOfCapability>OUTPUT</absenceOfCapability>
				<absenceOfCapability>FORWARD</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SnptSrcPfxCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--src-pfx</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SNPT </presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SnptDstPfxCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--dst-pfx</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>address</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>SNPT </presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetMssCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-mss</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TCPMSS</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfCapability>ClampMssToPmtuCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ClampMssToPmtuCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--clamp-mss-to-pmtu</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TCPMSS</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfCapability>SetMssCapability</absenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:StripOptionsCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--strip-options</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>,</realConcatenator>
				<concatenatorCondition>
					<preVariable>opt</preVariable>
					<postVariable>opt</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TCPOPTSTRIP</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TeeGatewayCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--gateway</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>TEE</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TosSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-tos</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TOS</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TosSetSimbolCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--set-tos</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TOS</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TosBitCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--and-tos</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>AND</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--or-tos</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>OR</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<commandName>
				<realCommandName>--xor-tos</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>XOR</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TOS</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:OnPortCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--on-port</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TPROXY</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TPROXY</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
				<presenceOfValue>UDP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:OnIpCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--on-ip</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TPROXY</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
				<presenceOfValue>TCP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfCapability>IpProtocolTypeCapability</presenceOfCapability>
				<presenceOfValue>TPROXY</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
				<presenceOfValue>UDP</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TproxyMarkCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--tproxy-mark</realCommandName>
			</commandName>
			<bodyConcatenator>
				<realConcatenator>/</realConcatenator>
				<concatenatorCondition>
					<preVariable>value</preVariable>
					<postVariable>mask</postVariable>
				</concatenatorCondition>
			</bodyConcatenator>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TPROXY</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>OUTPUT</absenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TraceCapability">
		<adapter>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TRACE</presenceOfValue>
				<presenceOfValue>raw</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:TtlSetCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ttl-set</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TTL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:TtlDecCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ttl-dec</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TTL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	<securityCapability xsi:type="p:TtlIncCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ttl-inc</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfCapability>TableCapability</presenceOfCapability>
				<presenceOfValue>TTL</presenceOfValue>
				<presenceOfValue>mangle</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UlogNlgroupCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ulog-nlgroup</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>ULOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UlogPrefixCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ulog-prefix</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>ULOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UlogCprangeCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ulog-cprange</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>ULOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:UlogQthresholdCapability">
		<adapter>
	  		<commandName>
				<realCommandName>--ulog-qthreshold</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>JumpCapability</presenceOfCapability>
				<presenceOfValue>ULOG</presenceOfValue>
			</dependency>
		</adapter>
	</securityCapability>
	
	
	
	
	
	
	<securityCapability xsi:type="p:DeleteChainCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-X</realCommandName>
			</commandName>		
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>	
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:FlushRuleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-F</realCommandName>
			</commandName>			
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:SetPolicyCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-P</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:AppendRuleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-A</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>			
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ListRulesCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-S</realCommandName>
			</commandName>			
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:CheckCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-C</realCommandName>
			</commandName>			
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:JumpCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-j</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>AppendRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>CheckCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>DeleteRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>InsertRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>ReplaceRuleCapability</presenceOfCapability>
			</dependency>
	  	</adapter>
  	</securityCapability>
  	
	<securityCapability xsi:type="p:ZeroCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-Z</realCommandName>
			</commandName>	
	  		<bodyConcatenator>
	  			<realConcatenator> </realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>chain</preVariable>
	  				<postVariable>rulenum</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>				
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:NewChainCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-N</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:DeleteRuleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-D</realCommandName>
			</commandName>			
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:HelpCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-h</realCommandName>
			</commandName>	
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ListCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-L</realCommandName>
			</commandName>	
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:RenameChainCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-E</realCommandName>
			</commandName>	
	  		<bodyConcatenator>
	  			<realConcatenator> </realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>oldName</preVariable>
	  				<postVariable>newName</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>		
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:ReplaceRuleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-R</realCommandName>
			</commandName>	
	  		<bodyConcatenator>
	  			<realConcatenator> </realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>chain</preVariable>
	  				<postVariable>rulenum</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>		
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:InsertRuleCapability">
		<adapter>
	  		<commandName>
				<realCommandName>-I</realCommandName>
			</commandName>	
	  		<bodyConcatenator>
	  			<realConcatenator> </realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>chain</preVariable>
	  				<postVariable>rulenum</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>		
			<dependency>
				<presenceOfCapability>TableCapability</presenceOfCapability>
			</dependency>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:GotoCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-g</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:SetCounterCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-c</realCommandName>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator> </realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>packets</preVariable>
	  				<postVariable>bytes</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  	</adapter>  	
	</securityCapability>
	
	<securityCapability xsi:type="p:FragmentCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-f</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -f</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
		</adapter>
	</securityCapability>
	
	<securityCapability xsi:type="p:MatchCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-m</realCommandName>
			</commandName>
			<dependency>
				<presenceOfCapability>AppendRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>CheckCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>DeleteRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>InsertRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>ReplaceRuleCapability</presenceOfCapability>
			</dependency>
	  	</adapter>
	  	
  	</securityCapability>
  	
	<securityCapability xsi:type="p:VerboseCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-v</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:WaitCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-w</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:NumericCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-n</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:ExactCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-x</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:LineNumbersCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--line-numbers</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:ModprobeCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>--modprobe=</realCommandName>
			</commandName>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:TableCapability">
  		<adapter>
	  		<commandName>
				<realCommandName>*</realCommandName>
			</commandName>
			<dependency>
				<presenceOfValue>filter</presenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>nat</presenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>raw</presenceOfValue>
				<absenceOfValue>INPUT</absenceOfValue>
				<absenceOfValue>FORWARD</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>security</presenceOfValue>
				<absenceOfValue>PREROUTING</absenceOfValue>
				<absenceOfValue>POSTROUTING</absenceOfValue>
			</dependency>
			<internalClauseConcatenator></internalClauseConcatenator>
			<clauseConcatenator>\n</clauseConcatenator>
		</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:InputInterfaceCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-i</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -i</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfValue>OUTPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>POSTROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
	  	</adapter>
  	</securityCapability>
	
	<securityCapability xsi:type="p:OutputInterfaceCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-o</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -o</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfValue>INPUT</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>PREROUTING</presenceOfValue>
			</dependency>
			<dependency>
				<presenceOfValue>FORWARD</presenceOfValue>
			</dependency>
	  	</adapter>
  	</securityCapability>
  	
	<securityCapability xsi:type="p:IpProtocolTypeCapability">
  		<adapter>
	  		<commandName>
				<realCommandName>-p</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -p</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
			<dependency>
				<presenceOfCapability>AppendRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>CheckCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>DeleteRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>InsertRuleCapability</presenceOfCapability>
			</dependency>
			<dependency>
				<presenceOfCapability>ReplaceRuleCapability</presenceOfCapability>
			</dependency>
  		</adapter>
  		<translator>
			<enumerationName>ProtocolTypeEnumeration</enumerationName>
			<modifyDefault>
				<addNewValue>
					<newValue>hopopt</newValue>
					<integerMatching>0</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>icmp</newValue>
					<integerMatching>1</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>igmp</newValue>
					<integerMatching>2</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ggp</newValue>
					<integerMatching>3</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ip-encap</newValue>
					<integerMatching>4</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>st</newValue>
					<integerMatching>5</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>tcp</newValue>
					<integerMatching>6</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>egp</newValue>
					<integerMatching>8</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>igp</newValue>
					<integerMatching>9</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>pup</newValue>
					<integerMatching>12</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>udp</newValue>
					<integerMatching>17</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>hmp</newValue>
					<integerMatching>20</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>xns-idp</newValue>
					<integerMatching>22</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>rdp</newValue>
					<integerMatching>27</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>iso-tp4</newValue>
					<integerMatching>29</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>dccp</newValue>
					<integerMatching>33</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>xtp</newValue>
					<integerMatching>36</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ddp</newValue>
					<integerMatching>37</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>idpr-cmtp</newValue>
					<integerMatching>38</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6</newValue>
					<integerMatching>41</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6-route</newValue>
					<integerMatching>43</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6-frag</newValue>
					<integerMatching>44</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>idrp</newValue>
					<integerMatching>45</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>rsvp</newValue>
					<integerMatching>46</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>gre</newValue>
					<integerMatching>47</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipsec-esp</newValue>
					<integerMatching>50</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipsec-ah</newValue>
					<integerMatching>51</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>skip</newValue>
					<integerMatching>57</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6-icmp</newValue>
					<integerMatching>58</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6-nonxt</newValue>
					<integerMatching>59</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipv6-opts</newValue>
					<integerMatching>60</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>rspf</newValue>
					<integerMatching>73</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>cphb</newValue>
					<integerMatching>73</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>vmtp</newValue>
					<integerMatching>81</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>eigrp</newValue>
					<integerMatching>88</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ospfigp</newValue>
					<integerMatching>89</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ax.25</newValue>
					<integerMatching>93</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipip</newValue>
					<integerMatching>94</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>etherip</newValue>
					<integerMatching>97</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>encap</newValue>
					<integerMatching>98</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>pim</newValue>
					<integerMatching>103</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>ipcomp</newValue>
					<integerMatching>108</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>vrrp</newValue>
					<integerMatching>112</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>l2tp</newValue>
					<integerMatching>115</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>isis</newValue>
					<integerMatching>124</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>sctp</newValue>
					<integerMatching>132</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>fc</newValue>
					<integerMatching>133</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>mh</newValue>
					<integerMatching>135</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>MH</newValue>
					<integerMatching>135</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>udplite</newValue>
					<integerMatching>136</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>mpls-in-ip</newValue>
					<integerMatching>137</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>hip</newValue>
					<integerMatching>139</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>shim6</newValue>
					<integerMatching>140</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>wesp</newValue>
					<integerMatching>141</integerMatching>
				</addNewValue>
				<addNewValue>
					<newValue>rohc</newValue>
					<integerMatching>142</integerMatching>
				</addNewValue>
									
				
				
				
				<renameValue>
					<realName>IP-in-IP</realName>
					<myName>IP-ENCAP</myName>
				</renameValue>
				<renameValue>
					<realName>ESP</realName>
					<myName>IPSEC-ESP</myName>
				</renameValue>
				<renameValue>
					<realName>AH</realName>
					<myName>IPSEC-AH</myName>
				</renameValue>
				<renameValue>
					<realName>CPHB</realName>
					<myName>RSPF</myName>
				</renameValue>
				<renameValue>
					<realName>OSPF</realName>
					<myName>OSPFIGP</myName>
				</renameValue>
				<renameValue>
					<realName>OS</realName>
					<myName>IPIP</myName>
				</renameValue>
				<renameValue>
					<realName>IPComp</realName>
					<myName>IPCOMP</myName>
				</renameValue>
				<renameValue>
					<realName>ISIS_over_IPv4</realName>
					<myName>ISIS</myName>
				</renameValue>
				<renameValue>
					<realName>Mobility_Header</realName>
					<myName>Mobility-Header</myName>
				</renameValue>
				
 				<addExistingValue>HOPOPT</addExistingValue>
				<addExistingValue>ICMP</addExistingValue>
				<addExistingValue>IGMP</addExistingValue>
				<addExistingValue>GGP</addExistingValue>
				<addExistingValue>ST</addExistingValue>
				<addExistingValue>TCP</addExistingValue>
				<addExistingValue>EGP</addExistingValue>
				<addExistingValue>IGP</addExistingValue>
				<addExistingValue>PUP</addExistingValue>
				<addExistingValue>UDP</addExistingValue>
				<addExistingValue>HMP</addExistingValue>
				<addExistingValue>XNS-IDP</addExistingValue>
				<addExistingValue>RDP</addExistingValue>
				<addExistingValue>ISO-TP4</addExistingValue>
				<addExistingValue>DCCP</addExistingValue>
				<addExistingValue>XTP</addExistingValue>
				<addExistingValue>DDP</addExistingValue>
				<addExistingValue>IDPR-CMTP</addExistingValue>
				<addExistingValue>IPv6</addExistingValue>
				<addExistingValue>IPv6-Route</addExistingValue>
				<addExistingValue>IPv6-Frag</addExistingValue>
				<addExistingValue>IDRP</addExistingValue>
				<addExistingValue>RSVP</addExistingValue>
				<addExistingValue>GRE</addExistingValue>
				<addExistingValue>SKIP</addExistingValue>
				<addExistingValue>IPv6-ICMP</addExistingValue>
				<addExistingValue>IPv6-NoNxt</addExistingValue>
				<addExistingValue>IPv6-Opts</addExistingValue>
				<addExistingValue>CPHB</addExistingValue>
				<addExistingValue>VMTP</addExistingValue>
				<addExistingValue>EIGRP</addExistingValue>
				<addExistingValue>AX.25</addExistingValue>
				<addExistingValue>ETHERIP</addExistingValue>
				<addExistingValue>ENCAP</addExistingValue>
				<addExistingValue>PIM</addExistingValue>
				<addExistingValue>VRRP</addExistingValue>
				<addExistingValue>L2TP</addExistingValue>
				<addExistingValue>SCTP</addExistingValue>
				<addExistingValue>FC</addExistingValue>
				<addExistingValue>UDPLite</addExistingValue>
				<addExistingValue>MPLS-in-IP</addExistingValue>
				<addExistingValue>HIP</addExistingValue>
				<addExistingValue>Shim6</addExistingValue>
				<addExistingValue>WESP</addExistingValue>
				<addExistingValue>ROHC</addExistingValue>


	<!-- 
				<setNumericRange>
					<from>0</from>
					<to>255</to>
				</setNumericRange>
	
				<generateIntegerMatching>true</generateIntegerMatching>
	-->		

				<complexTypeWithIntegerAttributeName>ProtocolType</complexTypeWithIntegerAttributeName>
				<integerAttributeToBeRestricted>protocolTypeNumber</integerAttributeToBeRestricted>
					

			</modifyDefault>
  			
  		</translator>
  	</securityCapability>
  	
	<securityCapability xsi:type="p:IpDestinationAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-d</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -d</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  	</adapter>
  	</securityCapability>
  	
	<securityCapability xsi:type="p:IpSourceAddressCapability">
	  	<adapter>
	  		<commandName>
				<realCommandName>-s</realCommandName>
			</commandName>
	  		<commandName>
				<realCommandName>! -s</realCommandName>
				<commandNameCondition>
					<attributeName>operation</attributeName>
					<attributeValue>NOT_EQUAL_TO</attributeValue>
				</commandNameCondition>
			</commandName>
	  		<bodyConcatenator>
	  			<realConcatenator>/</realConcatenator>
	  			<concatenatorCondition>
	  				<preVariable>address</preVariable>
	  				<postVariable>mask</postVariable>
	  			</concatenatorCondition>
	  		</bodyConcatenator>
	  	</adapter>
  	</securityCapability>
	
  	
</p:nsf>